generator client {
    provider             = "prisma-client-py"
    interface            = "asyncio"
    recursive_type_depth = 5
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Chat {
    id         String    @id @unique @default(dbgenerated("(gen_random_uuid())::text"))
    title      String
    usecase    String
    message    Message[]
    footage    Footage?  @relation(fields: [footage_id], references: [id])
    created_at DateTime  @default(now()) @db.Timestamp(0)
    footage_id String?
}

model Message {
    id         String   @id @unique @default(dbgenerated("(gen_random_uuid())::text"))
    prompt     String
    response   Json[]
    created_at DateTime @default(now()) @db.Timestamp(0)
    chat       Chat     @relation(fields: [chat_id], references: [id], onDelete: Cascade)
    chat_id    String
}

model Footage {
    id         String      @id @unique @default(dbgenerated("(gen_random_uuid())::text"))
    filename   String
    chat       Chat[]
    video_data VideoData[]
}

model VideoData {
    id         String  @id @unique @default(dbgenerated("(gen_random_uuid())::text"))
    timestamp  String
    text_data  String
    class_name String
    object_box Float[]
    footage    Footage @relation(fields: [footage_id], references: [id], onDelete: Cascade)
    footage_id String
}
